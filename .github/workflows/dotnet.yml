# This is a basic workflow to help you get started with Actions

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x # Or your target .NET version

                # **Add a NuGet package restore step**
      - name: Restore NuGet packages
        run: dotnet restore src/Resume-Blazor.csproj # Specify the path to your project file

      - name: Debug - Print Environment Variables
        run: |
          echo "Firebase API Key: ${{ vars.__FIREBASE_API_KEY__ }}"
          echo "Auth Domain: ${{ vars.AUTHDOMAIN }}"
          echo "Project ID: ${{ vars.PROJECTID }}"
          echo "Storage Bucket: ${{ vars.STORAGEBUCKET }}"
          echo "Messaging Sender ID: ${{ vars.MESSAGINGSENDERID }}"
          echo "App ID: ${{ vars.__FIREBASE_AUTH_DOMAIN__ }}"
          echo "Measurement ID: ${{ vars.MEASUREMENTID }}"
        shell: bash


      # Your step to replace Firebase Config Placeholders
      - name: Replace Firebase Config Placeholders
        run: |
          sed -i 's|"apiKey"|"${{ vars.__FIREBASE_API_KEY__ }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"authDomain"|"${{ vars.AUTHDOMAIN }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"projectId"|"${{ vars.PROJECTID }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"storageBucket"|"${{ vars.STORAGEBUCKET }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"messagingSenderId"|"${{ vars.MESSAGINGSENDERID }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"appId"|"${{ vars.__FIREBASE_AUTH_DOMAIN__ }}"|g' src/wwwroot/appsettings.json
          sed -i 's|"measurementId"|"${{ vars.MEASUREMENTID }}"|g' src/wwwroot/appsettings.json
        shell: bash

  # Your .NET Publish step
      
      - name: .NET Publish for GitHub Pages
        run: dotnet publish src/Resume-Blazor.csproj -c Release -o publish_output --no-restore

      # Add other steps as needed (e.g., deployment)

       # **Add a step to list files in the publish directory**
      - name: List Published Files
        run: |
          echo "Listing files in ./publish_output/wwwroot:"
          ls -R ./publish_output/wwwroot # List files and directories recursively
        shell: bash

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./publish_output/wwwroot
          publish_branch: gh-pages
          # cname: your-custom-domain.com